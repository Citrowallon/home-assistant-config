# https://www.home-assistant.io/integrations/time_date/
- platform: time_date
  display_options:
    - 'time'
    - 'date'
    - 'date_time'
    - 'date_time_utc'
    - 'date_time_iso'
    - 'time_date'
    - 'time_utc'

# Travel time from Home > Main Site
# https://www.home-assistant.io/integrations/waze_travel_time/
- platform: waze_travel_time
  name: home_to_amadeus
  origin: !secret coord_home
  destination: !secret coord_work_amadeus
  region: 'EU'

# Travel time from Home > Bel Air
# https://www.home-assistant.io/integrations/waze_travel_time/
- platform: waze_travel_time
  name: home_to_ricardo
  origin: !secret coord_home
  destination: !secret coord_work_ricardo
  region: 'EU'
  
# Travel time from Main Site > Home
# https://www.home-assistant.io/integrations/waze_travel_time/
- platform: waze_travel_time
  name: amadeus_to_home
  origin: !secret coord_work_amadeus
  destination: !secret coord_home
  region: 'EU'

# Travel time from Bel Air > Home
# https://www.home-assistant.io/integrations/waze_travel_time/ 
- platform: waze_travel_time
  name: ricardo_to_home
  origin: !secret coord_work_ricardo
  destination: !secret coord_home
  region: 'EU'

# System monitoring 
- platform: systemmonitor
  resources:
    - type: disk_use_percent
      arg: /
    - type: disk_use
      arg: /
    - type: disk_free
      arg: /
    - type: memory_use_percent
    - type: memory_use
    - type: memory_free

# Neato specific sensors
# https://www.home-assistant.io/integrations/template/
- platform: template
  sensors:
      # time stamp of the last cleaning start
      spiroo_last_cleaning_start_ts:
          value_template: "{{as_timestamp(state_attr('vacuum.spiroo' , 'clean_start'))| timestamp_custom('%d/%m/%Y')}}"
          icon_template: "mdi:calendar"

      # Last cleaned area (m2)
      spiroo_last_cleaning_area:
          value_template: "{{state_attr('vacuum.spiroo' , 'clean_area') | round(0) }}"
          unit_of_measurement: "m2"
          icon_template: "mdi:checkbox-blank-outline"

      # Progress of cleaning (%)
      spiroo_cleaning_progress:
          value_template: >-
            {% if is_state('vacuum.spiroo', 'cleaning') -%}
            {% set a = 100 / (state_attr("vacuum.spiroo", "battery_level_at_clean_end") | int - 100)%}
            {% set b = 10000 / ( 100 - (state_attr("vacuum.spiroo", "battery_level_at_clean_end") | int )) %}
            {% set list = (a * states("sensor.spiroo_battery_level") | int + b) | round , 100 %}
            {{list | min}}
            {% else -%}
            100
            {%- endif %}
          icon_template: "mdi:progress-clock"
          unit_of_measurement: "%"
          
          
# Weather specific sensors
# https://www.home-assistant.io/integrations/template/
- platform: template
  sensors:
      # temperature
      weather_temperature:
          unit_of_measurement: "°C"
          value_template: "{{state_attr('weather.constellations' , 'temperature')}}"
          icon_template: "mdi:temperature-celsius"

      # humidity
      weather_humidity:
          unit_of_measurement: "%"
          value_template: "{{state_attr('weather.constellations' , 'humidity')}}"
          icon_template: "mdi:water"

      # pressure
      weather_pressure:
          unit_of_measurement: "hPa"
          value_template: "{{state_attr('weather.constellations' , 'pressure') | round(0)}}"
          icon_template: "mdi:gauge"
          
# SUN specific sensors
# https://www.home-assistant.io/integrations/template/
- platform: template
  sensors:
      # elevation
      sun_elevation:
          unit_of_measurement: "°"
          value_template: "{{state_attr('sun.sun' , 'elevation')}}"
          icon_template: "mdi:angle-acute"

      # azimuth
      sun_azimuth:
          unit_of_measurement: "°"
          value_template: "{{state_attr('sun.sun' , 'azimuth')}}"
          icon_template: "mdi:target"
      
# Time to reach home / work sensors
# https://www.home-assistant.io/integrations/template/
- platform: template
  sensors:
    target_arrival_home_to_ricardo:
        friendly_name: "Arrivé à Ricardo depuis la maison"
        value_template: "{{(as_timestamp(states('sensor.date_time_iso')) | int + (states('sensor.home_to_ricardo') | int) * 60) | timestamp_custom('%H:%M')}}"
        icon_template: "mdi:briefcase-outline"
    target_arrival_home_to_amadeus:
        friendly_name: "Arrivé à Amadeus depuis la maison"
        value_template: "{{(as_timestamp(states('sensor.date_time_iso')) | int + (states('sensor.home_to_amadeus') | int) * 60) | timestamp_custom('%H:%M')}}"
        icon_template: "mdi:briefcase"
    target_arrival_ricardo_to_home:
        friendly_name: "Arrivé à la maison depuis Ricardo"
        value_template: "{{(as_timestamp(states('sensor.date_time_iso')) | int + (states('sensor.ricardo_to_home') | int) * 60) | timestamp_custom('%H:%M')}}"
        icon_template: "mdi:home-outline"
    target_arrival_amadeus_to_home:
        friendly_name: "Arrivé à la maison depuis Amadeus"
        value_template: "{{(as_timestamp(states('sensor.date_time_iso')) | int + (states('sensor.amadeus_to_home') | int) * 60) | timestamp_custom('%H:%M')}}"
        icon_template: "mdi:home"


# Sensibo sensors
# https://www.home-assistant.io/integrations/template/
- platform: template
  sensors:
    temperature_living_room:
        friendly_name: Température Salon
        value_template: "{{state_attr('climate.salon', 'current_temperature')}}"
        icon_template:  "mdi:thermometer"
        unit_of_measurement: "°C"
    humidity_living_room:
        friendly_name: Humidité Salon
        value_template: "{{state_attr('climate.salon', 'current_humidity')}}"
        icon_template: "mdi:water-percent"
        unit_of_measurement: "%"
    temperature_main_bedroom:
        friendly_name: Température Chamblre
        value_template: "{{state_attr('climate.chambre', 'current_temperature')}}"
        icon_template: "mdi:thermometer"
        unit_of_measurement: "°C"
    humidity_main_bedroom: 
        friendly_name: Humidité Chambre
        value_template: "{{state_attr('climate.chambre', 'current_humidity')}}"
        icon_template: "mdi:water-percent"
        unit_of_measurement: "%"
    temperature_secondary_bedroom:
        friendly_name: Température Bureau
        value_template: "{{state_attr('climate.bureau', 'current_temperature')}}"
        icon_template: "mdi:thermometer"
        unit_of_measurement: "°C"
    humidity_secondary_bedroom:
        friendly_name: Hunimidté Bureau
        value_template: "{{state_attr('climate.bureau', 'current_humidity')}}"
        icon_template: "mdi:water-percent"
        unit_of_measurement: "%"
        
        
        
  